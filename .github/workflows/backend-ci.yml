name: Backend CI

on:
  push:
    branches: [ master ]
    paths:
      - 'backend/**'
      - '.github/workflows/backend-ci.yml'
  pull_request:
    branches: [ master ]
    paths:
      - 'backend/**'
      - '.github/workflows/backend-ci.yml'

jobs:
  test:
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:15-alpine
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: hr_portal_test
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        cache-dependency-path: backend/package-lock.json

    - name: Install dependencies
      working-directory: ./backend
      run: npm ci

    - name: Run unit tests
      working-directory: ./backend
      env:
        NODE_ENV: test
        TEST_DB_HOST: localhost
        TEST_DB_PORT: 5432
        TEST_DB_USERNAME: postgres
        TEST_DB_PASSWORD: postgres
        TEST_DB_NAME: hr_portal_test
        JWT_SECRET: test-jwt-secret
        JWT_EXPIRES_IN: 7d
        FRONTEND_URL: http://localhost:3001
      run: npm run test:cov

    - name: Run e2e tests
      working-directory: ./backend
      env:
        NODE_ENV: test
        TEST_DB_HOST: localhost
        TEST_DB_PORT: 5432
        TEST_DB_USERNAME: postgres
        TEST_DB_PASSWORD: postgres
        TEST_DB_NAME: hr_portal_test
        JWT_SECRET: test-jwt-secret
        JWT_EXPIRES_IN: 7d
        FRONTEND_URL: http://localhost:3001
      run: npm run test:e2e

    # - name: Upload coverage reports
    #   uses: actions/upload-artifact@v4
    #   with:
    #     name: backend-coverage
    #     path: backend/coverage/

    - name: Build application
      working-directory: ./backend
      run: npm run build:docker